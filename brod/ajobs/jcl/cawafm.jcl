/*  REXX EXEC FOR FILE MASTER 12.0                                    */
/*--------------------------------------------------------------------*/
/*     Copyright (c) 2003-2020 CA.  All rights reserved.              */
/*--------------------------------------------------------------------*/
ADDRESS ISPEXEC

PARSE ARG ZZMENOPT PIPE1 PIPE2 DEBUG
UPPER ZZMENOPT DEBUG
/**********************************************************************/
/* 1) CHANGE THE $CAI$ IN INSTPRE BELOW TO THE HLQ OF THE INSTALLED   */
/*    FILE MASTER DATASETS.                                           */
/* 2) CHANGE THE $USER$ IN PARMPRE BELOW TO THE HLQ OF THE PARM       */
/*    PDS DATASETS.                                                   */
/* 3) (OPTIONAL)                                                      */
/*    CHANGE THE LIBALLOC = 'Y' BELOW TO LIBALLOC = 'N'  IF THE       */
/*    FILE MASTER DATASETS ARE ALLOCATED IN THE TSO LOGON PROC        */
/* 4) (OPTIONAL)                                                      */
/*    CHANGE THE STEPLIB = 'Y' BELOW TO STEPLIB = 'N'  IF YOU DO      */
/*    NOT WANT THE ISPF GENERATED JCL TO CONTAIN A STEPLIB DD         */
/*    STATEMENT.                                                      */
/* 5) (OPTIONAL)                                                      */
/*    CHANGE THE STEPLIBN = '' BELOW TO STEPLIBN = 'YOUR.STEPLIB.DSN' */
/*    IF YOU WANT THE ISPF GENERATED JCL TO CONTAIN A STEPLIB DSN     */
/*    DIFFERENT THAN "&INSTPRE.CDBILOAD".                             */
/**********************************************************************/

INSTPRE  = "ZDNT.FMP.R12"   /* PRODUCT INSTALL FILES HLQ           */
PARMPRE  = "ZDNT.FMP.R12"  /* PRODUCT PARAMETER FILES HLQ         */
LIBALLOC = 'Y'       /* USE ISPF LIBDEF ALLOCATIONS         */
STEPLIB  = 'N'       /* ADD PRODUCT STEPLIB DD IN ISPF JCL  */
STEPLIBN = ''        /* ALTERNATE STEPLIB FULL DATASET NAME */

/*  STANDARD LOW LEVEL QUALIFIERS FOR SMP/E TARGET DATASETS      */
QCAICLIB  = 'CDBIEXEC'
QCAIISPM  = 'CDBIMSG0'
QCAIISPP  = 'CDBIPNL0'
QCAIISPS  = 'CDBISKL0'
QCAIISPT  = 'CDBITBL0'
QCAILIB   = 'CDBILOAD'

ZZL2 = '.'
IF ZZMENOPT = '' THEN DO
   ZZMENOPT = '.'
END

IF STEPLIBN = '' THEN DO
   STEPLIBN = '.'
END

GUIRUN = 'N'
GUIP1 = '.'
GUIP2 = '.'
IF ZZMENOPT = 'GUIRUN'
THEN DO
    IF PIPE1 = '' | PIPE2 = ''
    THEN DO
        SAY "CAWAG000E - GUIRUN was requested, but processing" ,
            "has been discontinued because both input and output",
            "pipe names were not provided."
        RETURN 16
    END
    GUIRUN = 'Y'
    GUIP1 = PIPE1
    GUIP2 = PIPE2
    ZZMENOPT = '.'
END
ELSE
IF ZZMENOPT ^= 'INSTALL' & ZZMENOPT ^= 'TRACE'
THEN DO
    IF LENGTH(ZZMENOPT) >= 3 & INDEX(ZZMENOPT,'.') ^= 0
    THEN DO
        ZZL2 = SUBSTR(ZZMENOPT,INDEX(ZZMENOPT,'.'))
        ZZMENOPT = SUBSTR(ZZMENOPT,1,INDEX(ZZMENOPT,'.')-1)
    END
END

IF SUBSTR(DEBUG,1,6) = 'DBGLVL'
THEN DBGLVL = DEBUG
ELSE DBGLVL = '.'

"CONTROL ERRORS RETURN"

'VGET (ZAPPLID) SHARED'

IF ZAPPLID = 'CAWA' | ZAPPLID = 'CEWA'
THEN DO
   /* IF WE ARE ALREADY IN THE PRODUCT, NO NEED FOR REST OF     */
   /* THE ALLOCATIONS.  JUST GET INTO THE PRODUCT AGAIN.        */
   ADDRESS ISPEXEC
   "SELECT CMD(CAWAMAIN "INSTPRE" "PARMPRE" "ZZMENOPT"
      "ZZL2" "STEPLIB" "STEPLIBN" "QCAILIB"
      "GUIRUN" "GUIP1" "GUIP2" "DBGLVL")
       NEWAPPL(CAWA) PASSLIB LANG(CREX)"
   RETURN
END

IF LIBALLOC = 'Y'
THEN DO
    SAVE_MSG = MSG()
    CALL MSG("OFF")
    /*  DYNAMICALLY ALLOCATE LIBRARIES */
    ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
    ADDRESS TSO
    "ALTLIB ACTIVATE APPLICATION(EXEC) ",
                     "DATASET('"INSTPRE"."QCAICLIB"')"
    "ALLOC F(LLIB) DA('"INSTPRE"."QCAILIB"') SHR REUSE"
    "ALLOC F(PLIB) DA('"INSTPRE"."QCAIISPP"') SHR REUSE"
    "ALLOC F(MLIB) DA('"INSTPRE"."QCAIISPM"') SHR REUSE"
    "ALLOC F(SLIB) DA('"INSTPRE"."QCAIISPS"') SHR REUSE"
    "ALLOC F(TLIB) DA('"INSTPRE"."QCAIISPT"') SHR REUSE"
    ADDRESS ISPEXEC
    "LIBDEF ISPPLIB LIBRARY ID(PLIB) STACK"
    "LIBDEF ISPMLIB LIBRARY ID(MLIB) STACK"
    "LIBDEF ISPSLIB LIBRARY ID(SLIB) STACK"
    "LIBDEF ISPTLIB LIBRARY ID(TLIB) STACK"
    "LIBDEF ISPLLIB LIBRARY ID(LLIB) STACK"
    PASSLIB = 'PASSLIB'
    X = MSG(SAVE_MSG)
END
ELSE PASSLIB = ''

PARSE VERSION REXXLANG REXXVER REXXRLDD REXXRLMM REXXRLYY
IF SUBSTR(REXXVER,1,1) < '3'
THEN DO
    SAY "CAWA4022E - FILE MASTER REQUIRES REXX TO BE" ,
        "AT RELEASE LEVEL 3.00 OR HIGHER. "
    SAY "CAWA4023E - YOUR RELEASE OF REXX IS "REXXVER ,
        " - RELEASE DATE " ,
        REXXRLMM" "STRIP(REXXRLDD,L,'0')", "REXXRLYY
END

ADDRESS ISPEXEC
"SELECT CMD(CAWAMAIN "INSTPRE" "PARMPRE" "ZZMENOPT"
      "ZZL2" "STEPLIB" "STEPLIBN" "QCAILIB"
      "GUIRUN" "GUIP1" "GUIP2" "DBGLVL")
       NEWAPPL(CAWA) PASSLIB LANG(CREX)"
RC_SELECT = RC
IF RC_SELECT > 8
THEN DO
    SAY "CAWA4021E - ERROR ENCOUNTERED CALLING CAWAMAIN ",
        " - RETURN CODE "RC_SELECT
    SAY "CAWA4021I  -  IF NO SYSTEM MESSAGE IS DISPLAYED,",
        "A POSSIBLE CAUSE IS THAT YOUR ISPF PROFILE ",
        "IS OUT DIRECTORY BLOCKS. "
END
SAVE_MSG = MSG()
CALL MSG("OFF")
IF LIBALLOC = 'Y'
THEN DO
    ADDRESS ISPEXEC
    "ISPEXEC LIBDEF ISPPLIB"
    "ISPEXEC LIBDEF ISPMLIB"
    "ISPEXEC LIBDEF ISPSLIB"
    "ISPEXEC LIBDEF ISPTLIB"
    "ISPEXEC LIBDEF ISPLLIB"
    ADDRESS TSO
    "ALTLIB DEACTIVATE APPLICATION(EXEC)"
    "FREE F(LLIB)"
    "FREE F(MLIB)"
    "FREE F(PLIB)"
    "FREE F(SLIB)"
    "FREE F(TLIB)"
END
ADDRESS ISPEXEC

ADDRESS TSO "FREE  FI(INPDS)"
X = MSG(SAVE_MSG)

RETURN

